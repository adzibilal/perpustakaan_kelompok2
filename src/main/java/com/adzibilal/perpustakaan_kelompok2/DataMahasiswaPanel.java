/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.adzibilal.perpustakaan_kelompok2;

import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ridwannurjaman
 */
public class DataMahasiswaPanel extends javax.swing.JPanel {
    Boolean isSave = false;
    Boolean isEdit = false;
    private MahasiswaDAO mahasiswaDAO;
    private DefaultTableModel modelTabelMahasiswa;
    /**
     * Creates new form DataAnggotaPanel
     */
    public DataMahasiswaPanel() throws SQLException {
        initComponents();
        mahasiswaDAO = new MahasiswaDAO();
        String[] columns = {"NPM", "Nama", "Jurusan","ALAMAT"};
        modelTabelMahasiswa = new DefaultTableModel(columns,0);
        jTable1.setModel(modelTabelMahasiswa);
        this.getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_npm = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_nama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmb_jurusan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_alamat = new javax.swing.JTextArea();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btn_cari = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_cari = new javax.swing.JTextField();

        txt_npm.setEnabled(false);
        txt_npm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_npmActionPerformed(evt);
            }
        });

        jLabel1.setText("NPM");

        txt_nama.setEnabled(false);

        jLabel2.setText("Nama Lengkap");

        cmb_jurusan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teknik Informatika", "Teknik Industri", "DKV", "Ekonomi", "Ilmu Komunikasi", "Psikologi", "Manajemen Bisnis" }));
        cmb_jurusan.setEnabled(false);

        jLabel3.setText("Jurusan");

        jLabel4.setText("Alamat");

        txt_alamat.setColumns(20);
        txt_alamat.setRows(5);
        txt_alamat.setEnabled(false);
        jScrollPane1.setViewportView(txt_alamat);

        btnCreate.setText("New Data");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btn_cari.setText("Cari");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NPM", "NAMA LENGKAP", "JURUSAN", "ALAMAT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_cari)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_cari))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btnCreate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(cmb_jurusan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_nama)
                                    .addComponent(txt_npm, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_npm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_jurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cari)
                    .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_npmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_npmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_npmActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
       if(isEdit){
         this.updateData();
        txt_npm.setEnabled(false);
        txt_nama.setEnabled(false);
        txt_alamat.setEnabled(false);
        cmb_jurusan.setEnabled(false);
        
        txt_npm.setText("");
        txt_nama.setText("");
        txt_alamat.setText("");
        
        isEdit = false;
        btnCreate.setText("New Data");
       }else{
            if(isSave){
                if("".equals(txt_npm.getText()) && "".equals(txt_nama.getText()) && "".equals(txt_alamat.getText())){
                     JOptionPane.showMessageDialog(this, "Field Tidak Boleh Kosong", "Info", JOptionPane.INFORMATION_MESSAGE);
                 }else{
                      btnCreate.setText("New Data");
                     this.tambahData();
                     isSave = false;
                     txt_npm.setEnabled(false);
                     txt_nama.setEnabled(false);
                     txt_alamat.setEnabled(false);
                     cmb_jurusan.setEnabled(false);

                     txt_npm.setText("");
                     txt_nama.setText("");
                     txt_alamat.setText("");
                 }

             }else{
                 txt_npm.setEnabled(true);
                 txt_nama.setEnabled(true);
                 txt_alamat.setEnabled(true);
                 cmb_jurusan.setEnabled(true);
                 btnCreate.setText("Save Data");
                 isSave = true;
             }
       }
      
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
        // TODO add your handling code here:
        this.cariMahasiswa();
    }//GEN-LAST:event_btn_cariActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel md = (DefaultTableModel)jTable1.getModel();
        int selectIndex = jTable1.getSelectedRow();
        txt_nama.setText(md.getValueAt(selectIndex, 1).toString());
        txt_npm.setText(md.getValueAt(selectIndex, 0).toString());
        txt_alamat.setText(md.getValueAt(selectIndex, 3).toString());
        String jurusan = (String) md.getValueAt(selectIndex, 2);
        cmb_jurusan.setSelectedItem(jurusan);
        btnDelete.setEnabled(true);
        btnEdit.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        
        if (option == JOptionPane.YES_OPTION) {
            this.hapusData();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
//         txt_npm.setEnabled(true);
        txt_nama.setEnabled(true);
        txt_alamat.setEnabled(true);
        cmb_jurusan.setEnabled(true);
        btnCreate.setText("Update Data");
        isEdit = true;
    }//GEN-LAST:event_btnEditActionPerformed
    
    private void tambahData(){
        try{
            Mahasiswa mahasiswa = new Mahasiswa(txt_npm.getText(), txt_nama.getText(), cmb_jurusan.getSelectedItem().toString(), txt_alamat.getText());
            String message = mahasiswaDAO.tambahMahasiswa(mahasiswa);
            if(message.contentEquals("NPM Sudah ada!")){
                JOptionPane.showMessageDialog(this, "Gagal menambahkan data: Npm sudah ada", "Info", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Berhasil Menambahkan Data", "Info", JOptionPane.INFORMATION_MESSAGE);
                this.getData();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void updateData(){
        try{
            Mahasiswa mahasiswa = new Mahasiswa(txt_npm.getText(), txt_nama.getText(), cmb_jurusan.getSelectedItem().toString(), txt_alamat.getText());
            mahasiswaDAO.perbaruiMahasiswa(mahasiswa);
            JOptionPane.showMessageDialog(this, "Berhasil Update Data", "Info", JOptionPane.INFORMATION_MESSAGE);
             this.getData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
     private void hapusData(){
        try{
            mahasiswaDAO.hapusMahasiswa(txt_npm.getText());
            JOptionPane.showMessageDialog(this, "Berhasil Hapus Data", "Info", JOptionPane.INFORMATION_MESSAGE);
             this.getData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void getData() throws SQLException {
         modelTabelMahasiswa.setRowCount(0);
        List<Mahasiswa> mahasiswaList = mahasiswaDAO.semuaMahasiswa();
        for (Mahasiswa value : mahasiswaList) {
            Object[] row = {value.getNpm(), value.getNama_lengkap(), value.getJurusan(), value.getAlamat()};
            modelTabelMahasiswa.addRow(row);
        }

        jTable1.getSelectionModel().clearSelection();
    }
    
    private void cariMahasiswa() {
        String searchQuery = txt_cari.getText();
        try {
            List<Mahasiswa> mahasiswa = mahasiswaDAO.cariMahasiswa(searchQuery);
            modelTabelMahasiswa.setRowCount(0);
            for (Mahasiswa v : mahasiswa) {
                 Object[] row = {v.getNpm(), v.getNama_lengkap(), v.getJurusan(), v.getAlamat()};
                modelTabelMahasiswa.addRow(row);
            }
            jTable1.getSelectionModel().clearSelection();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mencari mahasiswa: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btn_cari;
    private javax.swing.JComboBox<String> cmb_jurusan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txt_alamat;
    private javax.swing.JTextField txt_cari;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_npm;
    // End of variables declaration//GEN-END:variables
}
